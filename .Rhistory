ggplot(aes(x=age, y=friend_count), data=pf)+
coord_cartesian(xlim = c(13,70), ylim = c(0,1000))+
geom_point(alpha = 1/20,
position = position_jitter(h=0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = 0.1),
linetype = 2, color = 'blue' ) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = 0.9),
linetype = 2, color = 'blue' ) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = 0.5),
color = 'blue')
setwd("~/R/Springboard outputs/EDA Project - Diamond Prices (Part 2)")
library(ggplot2)
library(ggplot)
library(ggplot2)
library(ggplot2)
library(dplyr)
library(tidyr)
diamonds <- data(diamonds)
diamonds <- tbl_df(diamonds)
diamonds
data(diamonds)
View(diamonds)
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
head(diamonds)
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
head(diamonds)
diamonds <- tbl_df(diamonds)
# Preamble - load the relevant data and libraries
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
head(diamonds)
diamonds <- tbl_df(diamonds)
# Code for scatterplot
ggplot(data = diamonds,
aes(x = x, y = price))+
geom_point()
summary(diamonds$x)
# Preamble - load the relevant data and libraries
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
head(diamonds)
diamonds <- tbl_df(diamonds)
#Summarise data to draw relevant plot
summary(diamonds$x)
summary(diamonds$price)
# Code for scatterplot
ggplot(data = diamonds,
aes(x = x, y = price))+
geom_point(alpha = 1/10)
# Preamble - load the relevant data and libraries
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
head(diamonds)
diamonds <- tbl_df(diamonds)
#Summarise data to draw relevant plot
summary(diamonds$x)
summary(diamonds$price)
# Code for scatterplot
ggplot(data = diamonds,
aes(x = x, y = price))+
geom_point(alpha = 1/10)+
scale_x_continuous(breaks = seq(0,11,1))
# Preamble - load the relevant data and libraries
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
head(diamonds)
diamonds <- tbl_df(diamonds)
#Summarise data to draw relevant plot
summary(diamonds$x)
summary(diamonds$price)
# Code for scatterplot
ggplot(data = diamonds,
aes(x = x, y = price))+
geom_point(alpha = 1/10, color = 'blue')+
scale_x_continuous(breaks = seq(0,11,1))
# Preamble - load the relevant data and libraries
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
head(diamonds)
diamonds <- tbl_df(diamonds)
#Summarise data to draw relevant plot
summary(diamonds$x)
summary(diamonds$price)
# Code for scatterplot
ggplot(data = diamonds,
aes(x = x, y = price))+
geom_point(alpha = 1/10, color = 'orange')+
scale_x_continuous(breaks = seq(0,11,1))
with(diamonds, corr.test(x=x, y = price, method = 'pearson'))
with(diamonds, corr.test(x=y, y = price, method = 'pearson'))
with(diamonds, corr.test(x=z, y = price, method = 'pearson'))
with(diamonds, cor.test(x=x, y = price, method = 'pearson'))
with(diamonds, cor.test(x=y, y = price, method = 'pearson'))
with(diamonds, cor.test(x=z, y = price, method = 'pearson'))
# Preamble - load the relevant data and libraries
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
head(diamonds)
diamonds <- tbl_df(diamonds)
#Summarise data to draw relevant plot
summary(diamonds$x)
summary(diamonds$price)
# Code for scatterplot
ggplot(data = diamonds,
aes(x = x, y = price))+
geom_point(alpha = 1/10, color = 'orange')+
scale_x_continuous(breaks = seq(0,11,1))
ggplot(data = diamonds,
aes(x = depth, y = price))+
geom_point(alpha = 1/10, color = 'blue')+
scale_x_continuous()
summary(diamonds$depth)
ggplot(data = diamonds,
aes(x = depth, y = price))+
geom_point(alpha = 1/10, color = 'blue')+
scale_x_continuous(limits =c(40,80), breaks=seq(40,80,5))
summary(diamonds$depth)
ggplot(data = diamonds,
aes(x = depth, y = price))+
geom_point(alpha = 1/100, color = 'blue')+
scale_x_continuous(limits =c(40,80), breaks=seq(40,80,2))
ggplot(data = diamonds,
aes(x = depth, y = price))+
geom_point(alpha = 1/100, color = 'blue')+
scale_x_continuous(limits =c(40,80), breaks=seq(54,70,2))
ggplot(data = diamonds,
aes(x = depth, y = price))+
geom_point(alpha = 1/100, color = 'blue')+
scale_x_continuous(limits =c(40,80), breaks=seq(56,68,2))
with(diamonds, cor.test(x=depth, y = price, method = 'pearson'))
ggplot(data = subset(diamonds, price < quantile(diamonds$price, probs = 0.99) & carat < quantile(diamonds$carat, probs = 0.99)),
aes(x = carat, y = price))+
geom_point(alpha = 1/100, color = 'green')
ggplot(data = subset(diamonds, price < quantile(diamonds$price, probs = 0.5) & carat < quantile(diamonds$carat, probs = 0.5)),
aes(x = carat, y = price))+
geom_point(alpha = 1/100, color = 'green')
ggplot(data = subset(diamonds, price < quantile(diamonds$price, probs = 0.99) & carat < quantile(diamonds$carat, probs = 0.99)),
aes(x = carat, y = price))+
geom_point(alpha = 1/100, color = 'green')
diamonds$volume <- diamonds$x * diamonds$y * diamonds*z
ggplot(diamonds, aes(x = carat, y = volume))+
geom_point(alpha = 1/20, color = 'orange')
names(diamonds)
diamonds$z
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(diamonds, aes(x = carat, y = volume))+
geom_point(alpha = 1/20, color = 'orange')
summary(diamonds$volume)
summary(diamonds$carat)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
ggplot(diamonds, aes(x = carat, y = volume))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.2,3.5), breaks = seq(0.2,3.5,0.1))+
scale_y_continuous(limits=c(0,500), breaks = seq(0,500,100))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
ggplot(diamonds, aes(x = carat, y = volume))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,3.6), breaks = seq(0.0,3.6,0.2))+
scale_y_continuous(limits=c(0,500), breaks = seq(0,500,100))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,3.6), breaks = seq(0.0,3.6,0.2))+
scale_y_continuous(limits=c(0,500), breaks = seq(0,500,100))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
count(diamonds$volume == 0)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))+
geom_line(stat="lm")
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))+
geom_smooth(method="lm")
with(diamonds, cor.test(x=volume, y=price, method = 'pearson'))
with(subset(diamonds, volume != 0 & volume < 800), cor.test(x=volume, y=price, method = 'pearson'))
diamonds_wo_outliers <- subset(diamonds, volume != 0 & volume < 800)
diamonds_wo_outliers <- subset(diamonds, volume != 0 & volume < 800)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))
diamonds_wo_outliers <- subset(diamonds, volume != 0 & volume < 800)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))+
geom_smooth(method="lm", color='red')
diamonds_wo_outliers <- subset(diamonds, volume != 0 & volume < 800)
ggplot(diamonds_wo_outliers, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))+
geom_smooth(method="lm", color='red')
View(diamonds)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price), max_price = max(price), n = n()) %>%
arrange(clarity)
View(diamondsByClarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(as.numeric(price), min_price = min(price), max_price = max(price), n = n()) %>%
arrange(clarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
View(diamonds_by_color)
View(diamonds_mp_by_color)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
ggplot(data = diamonds_mp_by_color,
aes(x = color, y = mean_price)+
geom_bar()
# Chunk 1: price vs x
# Preamble - load the relevant data and libraries
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
diamonds <- tbl_df(diamonds)
#Summarise data to find relevant axis limits
summary(diamonds$x)
summary(diamonds$price)
# Code for scatterplot
ggplot(data = diamonds,
aes(x = x, y = price))+
geom_point(alpha = 1/10, color = 'orange')+
scale_x_continuous(breaks = seq(0,11,1))
# Chunk 2: correlation questions
with(diamonds, cor.test(x=x, y = price, method = 'pearson'))
with(diamonds, cor.test(x=y, y = price, method = 'pearson'))
with(diamonds, cor.test(x=z, y = price, method = 'pearson'))
# Chunk 3: plot price vs depth
ggplot(data = diamonds,
aes(x = depth, y = price))+
geom_point(color = 'blue')+
scale_x_continuous(limits =c(40,80), breaks=seq(40,80,5))
summary(diamonds$depth)
# Chunk 4: make points transparent and change axis
ggplot(data = diamonds,
aes(x = depth, y = price))+
geom_point(alpha = 1/100, color = 'blue')+
scale_x_continuous(limits =c(40,80), breaks=seq(56,68,2))
# Chunk 5: correlation of depth and price
with(diamonds, cor.test(x=depth, y = price, method = 'pearson'))
# Chunk 6: scatterplot of price vs carat
ggplot(data = subset(diamonds, price < quantile(diamonds$price, probs = 0.99) & carat < quantile(diamonds$carat, probs = 0.99)),
aes(x = carat, y = price))+
geom_point(alpha = 1/100, color = 'green')
# Chunk 7: scatterplot of price vs volume
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))
# Chunk 8: correlation of price and volume exc. outliers
with(subset(diamonds, volume != 0 & volume < 800), cor.test(x=volume, y=price, method = 'pearson'))
# Chunk 9: subset the data
diamonds_wo_outliers <- subset(diamonds, volume != 0 & volume < 800)
ggplot(diamonds_wo_outliers, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))+
geom_smooth(method="lm", color='red')
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(as.numeric(price), min_price = min(price), max_price = max(price), n = n()) %>%
arrange(clarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(as.numeric(price), min_price = min(price), max_price = max(price), n = n())) %>%
arrange(clarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(as.numeric(price), min_price = min(price), max_price = max(price), n = n())) %>%
arrange(clarity)
# Chunk 1: price vs x
# Preamble - load the relevant data and libraries
library(ggplot2)
library(dplyr)
library(tidyr)
data(diamonds)
diamonds <- tbl_df(diamonds)
#Summarise data to find relevant axis limits
summary(diamonds$x)
summary(diamonds$price)
# Code for scatterplot
ggplot(data = diamonds,
aes(x = x, y = price))+
geom_point(alpha = 1/10, color = 'orange')+
scale_x_continuous(breaks = seq(0,11,1))
# Chunk 2: correlation questions
with(diamonds, cor.test(x=x, y = price, method = 'pearson'))
with(diamonds, cor.test(x=y, y = price, method = 'pearson'))
with(diamonds, cor.test(x=z, y = price, method = 'pearson'))
# Chunk 3: plot price vs depth
ggplot(data = diamonds,
aes(x = depth, y = price))+
geom_point(color = 'blue')+
scale_x_continuous(limits =c(40,80), breaks=seq(40,80,5))
summary(diamonds$depth)
# Chunk 4: make points transparent and change axis
ggplot(data = diamonds,
aes(x = depth, y = price))+
geom_point(alpha = 1/100, color = 'blue')+
scale_x_continuous(limits =c(40,80), breaks=seq(56,68,2))
# Chunk 5: correlation of depth and price
with(diamonds, cor.test(x=depth, y = price, method = 'pearson'))
# Chunk 6: scatterplot of price vs carat
ggplot(data = subset(diamonds, price < quantile(diamonds$price, probs = 0.99) & carat < quantile(diamonds$carat, probs = 0.99)),
aes(x = carat, y = price))+
geom_point(alpha = 1/100, color = 'green')
# Chunk 7: scatterplot of price vs volume
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
summary(diamonds$volume)
summary(diamonds$carat)
ggplot(diamonds, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))
# Chunk 8: correlation of price and volume exc. outliers
with(subset(diamonds, volume != 0 & volume < 800), cor.test(x=volume, y=price, method = 'pearson'))
# Chunk 9: subset the data
diamonds_wo_outliers <- subset(diamonds, volume != 0 & volume < 800)
ggplot(diamonds_wo_outliers, aes(x = volume, y = price))+
geom_point(alpha = 1/20, color = 'orange')+
scale_x_continuous(limits=c(0.0,500), breaks = seq(0,500,100))+
geom_smooth(method="lm", color='red')
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(as.numeric(price), min_price = min(price), max_price = max(price), n = n())) %>%
arrange(clarity)
View(diamondsByClarity)
diamondsByClarity <-NULL
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(as.numeric(price), min_price = min(price), max_price = max(price), n = n())) %>%
arrange(clarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price), max_price = max(price), n = n()) %>%
arrange(clarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
ggplot(data = diamonds_mp_by_color,
aes(x = color, y = mean_price)+
geom_bar()
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
ggplot(data = diamonds_mp_by_color,
aes(x = color, y = mean_price))+
geom_bar()
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
ggplot(data = diamonds_mp_by_color,
aes(x = color))+
geom_bar()
View(diamonds_mp_by_color)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
qplot(data= diamonds_mp_by_color, x = color, y=mean_price)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
qplot(data= diamonds_mp_by_color, x = color, y=mean_price, geom = "histogram")
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
qplot(data= diamonds_mp_by_color, x = color, y=mean_price, geom = "bar")
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
ggplot(data = diamonds_mp_by_color,
aes(x = color, y = mean_price)
)+
geom_bar()
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
ggplot(data = diamonds_mp_by_color,
aes(x = color)
)+
geom_bar(stat=diamonds_mp_by_color$mean_price)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
ggplot(data = diamonds_mp_by_color,
aes(x = color)
)+
geom_bar(stat=diamonds_mp_by_color)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
ggplot(data = diamonds_mp_by_color,
aes(x = color, y = mean_price)
)+
geom_bar(stat="identity")
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
p1 <- ggplot(data = diamonds_mp_by_color,
aes(x = color, y = mean_price)
)+
geom_bar(stat="identity")
p2 <- ggplot(data = diamonds_mp_by_clarity,
aes(x = color, y = mean_price)
)+
geom_bar(stat="identity")
grid.arrange(p1,p2, ncol = 1)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
p1 <- ggplot(data = diamonds_mp_by_color,
aes(x = color, y = mean_price)
)+
geom_bar(stat="identity")
p2 <- ggplot(data = diamonds_mp_by_clarity,
aes(x = color, y = mean_price)
)+
geom_bar(stat="identity")
grid.arrange(p1,p2)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
p1 <- ggplot(data = diamonds_mp_by_color,
aes(x = color, y = mean_price)
)+
geom_bar(stat="identity")
p2 <- ggplot(data = diamonds_mp_by_clarity,
aes(x = clarity, y = mean_price)
)+
geom_bar(stat="identity")
grid.arrange(p1,p2, ncol = 1)
